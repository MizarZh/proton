pub const NUM_PIECE: usize = 15;
pub enum PIECE {
  WHITE_PAWN,
  WHITE_KNIGHT,
  WHITE_BISHOP,
  WHITE_ROOK,
  WHITE_QUEEN,
  WHITE_KING,
  BLACK_PAWN = 8,
  BLACK_KNIGHT,
  BLACK_BISHOP,
  BLACK_ROOK,
  BLACK_QUEEN,
  BLACK_KING,
  NO_PIECE,
}

pub const NUM_PIECE_TYPE: usize = 6;
pub enum PIECE_TYPE {
  PAWN,
  KNIGHT,
  BISHOP,
  ROOK,
  QUEEN,
  KING,
}

pub const NUM_SQUARE: usize = 64;
#[rustfmt::skip]
pub enum PIECE_TYPE {
  A1, B1, C1, D1, E1, F1, G1, H1,
  A2, B2, C2, D2, E2, F2, G2, H2,
  A3, B3, C3, D3, E3, F3, G3, H3,
  A4, B4, C4, D4, E4, F4, G4, H4,
  A5, B5, C5, D5, E5, F5, G5, H5,
  A6, B6, C6, D6, E6, F6, G6, H6,
  A7, B7, C7, D7, E7, F7, G7, H7,
  A8, B8, C8, D8, E8, F8, G8, H8,
  NO_SQUARE,
}

pub const NUM_FILE: usize = 8;
pub enum FILE {
  AFILE,
  BFILE,
  CFILE,
  DFILE,
  EFILE,
  FFILE,
  GFILE,
  HFILE,
}

pub const NUM_RANK: usize = 8;
pub enum RANK {
  RANK1,
  RANK2,
  RANK3,
  RANK4,
  RANK5,
  RANK6,
  RANK7,
  RANK8,
}

type Bitboard = u64;

pub const FILE_MASK: [Bitboard; NUM_FILE] = [
  0x101010101010101,
  0x202020202020202,
  0x404040404040404,
  0x808080808080808,
  0x1010101010101010,
  0x2020202020202020,
  0x4040404040404040,
  0x8080808080808080,
];

pub const RANK_MASK: [Bitboard; NUM_RANK] = [
  0xff,
  0xff00,
  0xff0000,
  0xff000000,
  0xff00000000,
  0xff0000000000,
  0xff000000000000,
  0xff00000000000000,
];

#[rustfmt::skip]
pub const SQUARE_MASK: [Bitboard; NUM_SQUARE] = [
  0x1, 0x2, 0x4, 0x8,
  0x10, 0x20, 0x40, 0x80,
  0x100, 0x200, 0x400, 0x800,
  0x1000, 0x2000, 0x4000, 0x8000,
  0x10000, 0x20000, 0x40000, 0x80000,
  0x100000, 0x200000, 0x400000, 0x800000,
  0x1000000, 0x2000000, 0x4000000, 0x8000000,
  0x10000000, 0x20000000, 0x40000000, 0x80000000,
  0x100000000, 0x200000000, 0x400000000, 0x800000000,
  0x1000000000, 0x2000000000, 0x4000000000, 0x8000000000,
  0x10000000000, 0x20000000000, 0x40000000000, 0x80000000000,
  0x100000000000, 0x200000000000, 0x400000000000, 0x800000000000,
  0x1000000000000, 0x2000000000000, 0x4000000000000, 0x8000000000000,
  0x10000000000000, 0x20000000000000, 0x40000000000000, 0x80000000000000,
  0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
  0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000,
  0x0
];

