use super::squares::{NUM_FILE, NUM_RANK, TOTAL_SQUARE};

#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Debug)]
pub struct Bitboard(pub u64);

impl Bitboard {}

macro_rules! bitboard_array {
  ($($val:expr),* $(,)?) => {
      [$(Bitboard($val)),*]  // Expands into a fixed-size array
  };
}

pub const FILE_MASK: [Bitboard; NUM_FILE] = bitboard_array![
  0x101010101010101,
  0x202020202020202,
  0x404040404040404,
  0x808080808080808,
  0x1010101010101010,
  0x2020202020202020,
  0x4040404040404040,
  0x8080808080808080,
];

pub const RANK_MASK: [Bitboard; NUM_RANK] = bitboard_array![
  0xff,
  0xff00,
  0xff0000,
  0xff000000,
  0xff00000000,
  0xff0000000000,
  0xff000000000000,
  0xff00000000000000,
];

#[rustfmt::skip]
pub const SQUARE_MASK: [Bitboard; TOTAL_SQUARE] = bitboard_array![
  0x1, 0x2, 0x4, 0x8,
  0x10, 0x20, 0x40, 0x80,
  0x100, 0x200, 0x400, 0x800,
  0x1000, 0x2000, 0x4000, 0x8000,
  0x10000, 0x20000, 0x40000, 0x80000,
  0x100000, 0x200000, 0x400000, 0x800000,
  0x1000000, 0x2000000, 0x4000000, 0x8000000,
  0x10000000, 0x20000000, 0x40000000, 0x80000000,
  0x100000000, 0x200000000, 0x400000000, 0x800000000,
  0x1000000000, 0x2000000000, 0x4000000000, 0x8000000000,
  0x10000000000, 0x20000000000, 0x40000000000, 0x80000000000,
  0x100000000000, 0x200000000000, 0x400000000000, 0x800000000000,
  0x1000000000000, 0x2000000000000, 0x4000000000000, 0x8000000000000,
  0x10000000000000, 0x20000000000000, 0x40000000000000, 0x80000000000000,
  0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
  0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000,
  0x0
];

pub const WHITE_SQUIRE_MASK: Bitboard = Bitboard(0x55AA55AA55AA55AA);
pub const BLACK_SQUARE_MASK: Bitboard = Bitboard(0xAA55AA55AA55AA55);
